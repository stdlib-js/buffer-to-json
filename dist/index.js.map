{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert-is-buffer' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a `Buffer`.\n*\n* @param {Buffer} buffer - buffer to serialize\n* @throws {TypeError} first argument must be a `Buffer`\n* @returns {Object} JSON representation\n*\n* @example\n* var array2buffer = require( '@stdlib/buffer-from-array' );\n*\n* var buf = array2buffer( [ 1, 2 ] );\n* // returns <Buffer>\n*\n* var json = buffer2json( buf );\n* // returns { 'type': 'Buffer', 'data': [ 1, 2 ] }\n*/\nfunction buffer2json( buffer ) {\n\tvar out;\n\tvar i;\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a Buffer. Value: `%s`.', buffer ) );\n\t}\n\tout = {};\n\tout.type = 'Buffer';\n\tout.data = [];\n\tfor ( i = 0; i < buffer.length; i++ ) {\n\t\tout.data.push( buffer[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = buffer2json;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a JSON representation of a `Buffer`.\n*\n* @module @stdlib/buffer-to-json\n*\n* @example\n* var array2buffer = require( '@stdlib/buffer-from-array' );\n* var buffer2json = require( '@stdlib/buffer-to-json' );\n*\n* var buf = array2buffer( [ 1, 2 ] );\n* // returns <Buffer>\n*\n* var json = buffer2json( buf );\n* // returns { 'type': 'Buffer', 'data': [ 1, 2 ] }\n*/\n\n// MODULES //\n\nvar buffer2json = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = buffer2json;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAC/CC,EAAS,QAAS,uBAAwB,EAqB9C,SAASC,EAAaC,EAAS,CAC9B,IAAIC,EACAC,EACJ,GAAK,CAACL,EAAUG,CAAO,EACtB,MAAM,IAAI,UAAWF,EAAQ,wDAAyDE,CAAO,CAAE,EAKhG,IAHAC,EAAM,CAAC,EACPA,EAAI,KAAO,SACXA,EAAI,KAAO,CAAC,EACNC,EAAI,EAAGA,EAAIF,EAAO,OAAQE,IAC/BD,EAAI,KAAK,KAAMD,EAAQE,CAAE,CAAE,EAE5B,OAAOD,CACR,CAKAL,EAAO,QAAUG,ICxBjB,IAAII,EAAc,IAKlB,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isBuffer", "format", "buffer2json", "buffer", "out", "i", "buffer2json"]
}
